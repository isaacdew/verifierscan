<?php

include($_SERVER['DOCUMENT_ROOT'] . "/functions.php");

$access_token = $_ENV['FB_ACCESS_TOKEN'];
$verify_token = $_ENV['FB_VERIFY_TOKEN'];
$hub_verify_token = null;
 
if(isset($_REQUEST['hub_challenge'])) {
    $challenge = $_REQUEST['hub_challenge'];
    $hub_verify_token = $_REQUEST['hub_verify_token'];
}

if ($hub_verify_token === $verify_token) {
    echo $challenge;
}
$data = file_get_contents('php://input');
$input = json_decode($data, true);


$sender = $input['entry'][0]['messaging'][0]['sender']['id'];
$message = $input['entry'][0]['messaging'][0]['message']['text'];

if(!empty($message)) {
if(mb_stripos($message, 'how') !== false) {
    $message_to_reply = "VerifierScan credibility scores are automatically generated by an algorithm that collects specific data on each site it analyzes. It takes into account who owns the site, what characters or words are in the URL, if the site has been reported for phishing or malware and the spelling on the site. See https://verifierscan.com/scoring-system.php for more.";
} else if(mb_stripos($message, 'fake news') !== false) {
    $message_to_reply = "Seriously? How rude!";
} else if(filter_var($message, FILTER_VALIDATE_URL)) {
    $score = scoringFunction($message);
    $grade = letterGrade($score['ovr']);
    $message_to_reply = "The overall credibility score for " . $message . " is " . $score['ovr'] . ". " . $grade['message'];
} else {
    $message_to_reply = "Please, enter a valid URL and try again. Be sure to include 'http://'.";
}
} else {
    //Grab URL from message and remove Facebook related parts
    $url = $input['entry'][0]['messaging'][0]['message']['attachments'][0]['url'];
    $url = str_replace("https://l.facebook.com/l.php?u=", "", $url);
    $url = explode("&", $url);
    $url = urldecode($url[0]);
    
    $score = scoringFunction($url);
    $grade = letterGrade($score['ovr']);
    $message_to_reply = "The overall credibility score for " . $url . " is " . $score['ovr'] . ". " . $grade['message'];
}
//API Url
$url = 'https://graph.facebook.com/v2.11/me/messages?access_token=' . $access_token;

//Initiate cURL.
$ch = curl_init($url);

//The JSON data.
$jsonData = '{
    "recipient":{
        "id":"'.$sender.'"
    },
    "message":{
        "text":"'.$message_to_reply.'"
    }
}';

//Encode the array into JSON.
$jsonDataEncoded = $jsonData;

//Tell cURL that we want to send a POST request.
curl_setopt($ch, CURLOPT_POST, 1);

//Attach our encoded JSON string to the POST fields.
curl_setopt($ch, CURLOPT_POSTFIELDS, $jsonDataEncoded);

//Set the content type to application/json
curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));
//curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/x-www-form-urlencoded'));

//Execute the request
if(!empty($input['entry'][0]['messaging'][0]['message'])){
    $result = curl_exec($ch);
}
?>
